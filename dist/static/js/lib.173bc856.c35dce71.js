"use strict";(self.webpackChunkreact_base=self.webpackChunkreact_base||[]).push([[9221],{3412:function(n,e,t){var o=t(6710),r=t(4844);const s={};["object","boolean","number","function","string","symbol"].forEach(((n,e)=>{s[n]=function(t){return typeof t===n||"a"+(e<1?"n ":" ")+n}}));const i={};s.transitional=function(n,e,t){function s(n,e){return"[Axios v"+o.x+"] Transitional option '"+n+"'"+e+(t?". "+t:"")}return(t,o,a)=>{if(!1===n)throw new r.A(s(o," has been removed"+(e?" in "+e:"")),r.A.ERR_DEPRECATED);return e&&!i[o]&&(i[o]=!0,console.warn(s(o," has been deprecated since v"+e+" and will be removed in the near future"))),!n||n(t,o,a)}},e.A={assertOptions:function(n,e,t){if("object"!=typeof n)throw new r.A("options must be an object",r.A.ERR_BAD_OPTION_VALUE);const o=Object.keys(n);let s=o.length;for(;s-- >0;){const i=o[s],a=e[i];if(a){const e=n[i],t=void 0===e||a(e,i,n);if(!0!==t)throw new r.A("option "+i+" must be "+t,r.A.ERR_BAD_OPTION_VALUE)}else if(!0!==t)throw new r.A("Unknown option "+i,r.A.ERR_BAD_OPTION)}},validators:s}}}]);